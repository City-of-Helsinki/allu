- name: Create database user {{ reporting_database_user }}
  postgresql_user:
    login_host=localhost
    port=5433
    name={{ reporting_database_user }}
    password={{ reporting_database_password }}
    state=present
    role_attr_flags=NOCREATEDB,SUPERUSER,LOGIN
  become: yes
  become_user: postgres

- name: Create reporting database {{ reporting_database_name }}
  postgresql_db:
    name={{ reporting_database_name }}
    login_host=localhost
    port=5433
    lc_collate=fi_FI.utf8
    encoding=utf8
  become: yes
  become_user: postgres

- name: Create postgis extension to {{ reporting_database_name }}
  postgresql_ext:
    name=postgis
    db={{ reporting_database_name }}
    login_host=localhost
    port=5433
  become: yes
  become_user: postgres

- name: Create postgis_topology extension to {{ reporting_database_name }}
  postgresql_ext:
    name=postgis_topology
    db={{ reporting_database_name }}
    login_host=localhost
    port=5433
  become: yes
  become_user: postgres

- name: Create postgres_fdw extension to {{ reporting_database_name }}
  postgresql_ext:
    name=postgres_fdw
    db={{ reporting_database_name }}
    login_host=localhost
    port=5433
  become: yes
  become_user: postgres

- name: Drop all public access rights to {{ reporting_database_name }} database
  postgresql_privs:
    login_host=localhost
    port=5433
    database={{ reporting_database_name }}
    state=absent
    roles=PUBLIC
    privs=ALL
    type=database
  become: yes
  become_user: postgres

- name: Add all access rights to {{ reporting_database_name }} database for {{ reporting_database_user }} user
  postgresql_privs:
    host=localhost
    port=5433
    database={{ reporting_database_name }}
    roles={{ reporting_database_user }}
    state=present
    privs=ALL
    type=database
    grant_option=yes
  become: yes
  become_user: postgres

- name: Drop foreign data wrapper
  command:  psql {{ reporting_database_name }} --host localhost -p 5433  -c "DROP SERVER IF EXISTS foreigndb_fdw CASCADE;"
  become: yes
  become_user: postgres

- name: Add foreign data wrapper
  command:  psql {{ reporting_database_name }} --host localhost -p 5433  -c "CREATE SERVER allu_operative FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host '{{ operative_database_host }}', dbname '{{ operative_database_name }}', port '5432', updatable 'false', password '{{database_reporting_user_password}}', user 'database_reporting_user');"
  become: yes
  become_user: postgres

- name: Change owner of foreign data wrapper
  command: psql {{ reporting_database_name }} --host localhost -p 5433 -c "ALTER SERVER foreigndb_fdw OWNER TO {{ reporting_database_user }};"
  become: yes
  become_user: postgres

- name: Create user mapping for postgres
  command: psql {{ reporting_database_name }} --host localhost -p 5433 -c "CREATE USER MAPPING FOR postgres SERVER foreigndb_fdw OPTIONS (user '{{ reporting_database_user }}', password '{{ operative_database_password }}');"
  become: yes
  become_user: postgres

- name: Create user mapping for {{ reporting_database_user }}
  command: psql {{ reporting_database_name }} --host localhost -p 5433 -c "CREATE USER MAPPING FOR {{ reporting_database_user }} SERVER foreigndb_fdw OPTIONS (user '{{ reporting_database_user }}', password '{{ operative_database_password }}');"
  become: yes
  become_user: postgres

#- name: Import foreign schema
#  command: >
#          psql {{ reporting_database_name }} --host localhost -p 5433 -c
#          'CREATE SCHEMA IF NOT EXISTS allu_operative;
#          IMPORT FOREIGN SCHEMA allu
#          LIMIT TO (
#          application,
#          application_attachment,
#          application_customer,
#          application_kind,
#          application_tag,
#          attachment,
#          attachment_data,
#          change_history,
#          charge_basis,
#          city_district,
#          codeset,
#          comment,
#          contact,
#          contract,
#          customer,
#          decision,
#          deposit,
#          distribution_entry,
#          field_change,
#          fixed_location,
#          information_request,
#          information_request_field,
#          invoice,
#          invoice_recipient,
#          invoice_row,
#          kind_specifier,
#          location,
#          location_area,
#          location_flids,
#          location_geometry,
#          postal_address,
#          project,
#          supervision_task,
#          "user",
#          invoicing_period,
#          customer_location_validity,
#          termination) FROM SERVER foreigndb_fdw INTO allu_operative;'
#  become: yes
#  become_user: postgres

- name: Grant usage to operative schema for {{ reporting_database_user }}
  command:  psql {{ reporting_database_name }} --host localhost -p 5433 -c 'GRANT USAGE ON SCHEMA allu_operative to  "{{ reporting_database_user }}";'
  become: yes
  become_user: postgres

- name: Grant select to operative schema for {{ reporting_database_user }}
  command:  psql {{ reporting_database_name }} --host localhost -p 5433 -c 'GRANT SELECT ON ALL TABLES IN SCHEMA allu_operative to  "{{ reporting_database_user }}";'
  become: yes
  become_user: postgres

- name: Create schema for views
  postgresql_schema:
    login_host=localhost
    port=5433
    database={{ reporting_database_name }}
    name=allu_report_views
  become: yes
  become_user: postgres
