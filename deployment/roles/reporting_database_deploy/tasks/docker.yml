- name: Start Docker services on remote host
  service: name=docker state=started
  become: yes

- name: Stop and remove existing allu_reporting_database container from Docker
  docker_container:
    name: "{{ reporting_database_container_name }}"
    state: absent
  become: yes

- name: Remove existing allu_reporting_database image from Docker
  docker_image:
    name: "{{ github_registry_url }}/city-of-helsinki/allu/allu_reporting_database:{{ branch }}"
    state: absent
    force_absent: true
  become: yes
  when: "'test' in group_names or 'staging' in group_names"

- name: Login to Github repository at the remote
  docker_login:
    registry: "{{ github_registry_url }}/city-of-helsinki/allu"
    username: "{{ github_deploy_user }}"
    password: "{{ github_deploy_token }}"
  become: yes

- name: Pull allu_reporting_database Docker image from Github repository
  docker_image:
    source: pull
    name: "{{ github_registry_url }}/city-of-helsinki/allu/allu_reporting_database:{{ branch }}"
  become: yes

- name: Start allu_reporting_database container
  docker_container:
    name: "{{ reporting_database_container_name }}"
    image: "{{ github_registry_url }}/city-of-helsinki/allu/allu_reporting_database:{{ branch }}"
    shm_size: "{{ container_shm_size }}"
    restart_policy: always
    volumes:
      - /srv/data/allu/reporting_database/data:/var/lib/postgresql/data:rw
    published_ports:
      - "5433:5432"
    networks:
      - name: "{{ network_name }}"
  become: yes

- name: wait for Postgresql to initialize
  postgresql_ping:
    login_host: localhost
    port: 5433
    login_user: postgres
    login_password: "{{ database_password_allu_reporting_postgres }}"
  register: result
  until: result.is_available
  retries: 30
  delay: 4
