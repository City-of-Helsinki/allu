- name: WAL archive for backups - Set WAL archive mode
  postgresql_set:
    login_host: localhost
    login_password: "{{ database_password_postgres }}"
    name: archive_mode
    value: on
  when: "'staging' in group_names or 'production' in group_names"
  become: yes
  become_user: postgres

- name: WAL archive for backups - Check if archive command is set. Grep return code is 0 if matches were found and 1 if not.
  shell: grep -c "^archive_command = '\w" /srv/data/allu/database/data/postgresql.conf
  ignore_errors: true
  register: archive_command_check
  when: "'staging' in group_names or 'production' in group_names"
  become: yes

- name: WAL archive for backups - Skip setting of archive command
  debug:
    msg: archive_command was already set
  when:
    - archive_command_check.rc == 0
    - "'staging' in group_names or 'production' in group_names"

- name: WAL archive for backups - Set WAL archive command
  shell: echo "archive_command = 'test ! -f /srv/backup/allu/database/wal_archive/%f && cp %p /srv/backup/allu/database/wal_archive/%f'" >> /srv/data/allu/database/data/postgresql.conf
  when:
    - archive_command_check.rc > 0
    - "'staging' in group_names or 'production' in group_names"
  become: yes

- name: WAL archive for backups - Check if archive timeout is set. Grep return code is 0 if matches were found and 1 if not.
  shell: grep -c "^archive_timeout = \d" /srv/data/allu/database/data/postgresql.conf
  ignore_errors: true
  register: archive_timeout_check
  when: "'staging' in group_names or 'production' in group_names"
  become: yes

- name: WAL archive for backups - Skip setting of archive timeout
  debug:
    msg: archive_timeout was already set
  when:
    - archive_timeout_check.rc == 0
    - "'staging' in group_names or 'production' in group_names"

- name: WAL archive for backups - Set WAL archive timeout
  shell: echo "archive_timeout = 600" >> /srv/data/allu/database/data/postgresql.conf
  when:
    - archive_timeout_check.rc > 0
    - "'staging' in group_names or 'production' in group_names"
  become: yes

- name: Client authentication for psql command - Check if client auth is set. Grep return code is 0 if matches were found and 1 if not.
  shell: grep -c "^host    all              postgres        172.18.0.1/32           md5" /srv/data/allu/database/data/pg_hba.conf
  ignore_errors: true
  register: client_auth_check
  when: "'staging' in group_names or 'production' in group_names"
  become: yes

- name: Client authentication for psql command - Skip adding of a client auth
  debug:
    msg: Client auth was already set
  when:
    - client_auth_check.rc == 0
    - "'staging' in group_names or 'production' in group_names"

- name: Client authentication for psql command - Add client auth
  shell: echo -e "local   all              all                                     md5\nhost    all              postgres        172.18.0.1/32           md5" >> /srv/data/allu/database/data/pg_hba.conf
  args:
    executable: /bin/bash
  when:
    - client_auth_check.rc > 0
    - "'staging' in group_names or 'production' in group_names"
  become: yes

- name: Restart a container
  docker_container:
    name: "{{ database_container_name }}"
    state: started
    restart: true
  become: yes

- name: wait for Postgresql complete restart
  postgresql_ping:
    login_host: localhost
    port: 5432
    login_user: postgres
    login_password: "{{ database_password_postgres }}"
  register: result
  until: result.is_available
  retries: 30
  delay: 4
  become: yes
