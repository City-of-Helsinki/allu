<VirtualHost *:{{ http_port }}>
    ServerName {{ proxy_domain }}
    Redirect / https://{{ proxy_domain }}/
</VirtualHost>

<IfModule mod_ssl.c>
    <VirtualHost _default_:{{ https_port }}>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        ServerName {{ proxy_domain }}

        ServerAdmin {{ server_admin }}

        DocumentRoot /var/www/html

        SSLEngine on

        SSLCertificateFile      /etc/ssl/allu/certs/{{ ssl_certificate_file }}
        SSLCertificateKeyFile   /etc/ssl/allu/private/{{ ssl_certificate_key_file }}
{% if ssl_certificate_chain_file is defined %}
        SSLCertificateChainFile /etc/ssl/allu/certs/{{ ssl_certificate_chain_file }}
{% endif %}
        BrowserMatch "MSIE [2-6]" \
                      nokeepalive ssl-unclean-shutdown \
                      downgrade-1.0 force-response-1.0

        <Directory "/">
          Require all denied
        </Directory>

        ProxyPreserveHost on
        ProxyRequests off
        ProxyPass "{{ proxypass_api_context }}" "{{ proxypass_api_target }}"
        ProxyPassReverse "{{ proxypass_api_context }}" "{{ proxypass_api_target }}"
        ProxyPass "{{ proxypass_external_context }}" "{{ proxypass_external_target }}"
        ProxyPassReverse "{{ proxypass_external_context }}" "{{ proxypass_external_target }}"
        ProxyPass "{{ proxypass_geoserver_context }}" "{{ proxypass_geoserver_target }}"
        ProxyPassReverse "{{ proxypass_geoserver_context }}" "{{ proxypass_geoserver_target }}"
        RewriteEngine On

        ##############################
        # BEGIN MapProxy configuration
        ##############################
        WSGIScriptAlias /mapproxy /home/allu/mapproxy/python/config.py
        WSGIDaemonProcess mapproxy user=allu group=allu processes=8 threads=25
        WSGIProcessGroup mapproxy
        WSGIApplicationGroup %{GLOBAL}
        WSGIPassAuthorization On

        <Directory /home/allu/mapproxy/python>
          Require all granted
        </Directory>

        RewriteRule ^/wms(.*)$  /mapproxy/service$1  [PT]
        ##############################
        # END MapProxy configuration
        ##############################

        # Support for accessing Angular2 application's paths directly
        # (i.e. redirect all queries like /login to /index.html and let Angular2 handle the path)
        RewriteCond %{REQUEST_FILENAME} !-f
        # Commented to allow /home url navigation
        # RewriteCond %{REQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_URI} !.*\.(css|js|html|png|jpg|jpeg|gif|svg|txt)
        RewriteCond %{REQUEST_URI} !.*{{ proxypass_api_context }}
        RewriteCond %{REQUEST_URI} !.*{{ proxypass_external_context }}
        RewriteCond %{REQUEST_URI} !.*{{ proxypass_geoserver_context }}
        RewriteRule (.*) /index.html [L]

        # Try to force no caching for certain resources
        <filesMatch "\.(html|css)$">
          FileETag None
          Header unset ETag
          Header set Cache-Control "max-age=0, no-cache, no-store, must-revalidate"
          Header set Pragma "no-cache"
          Header set Expires "Wed, 11 Jan 1984 05:00:00 GMT"
        </filesMatch>

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        # LogLevel info ssl:warn

        # Enable debugging by uncommenting line below whenever you need to find out what's going on in Apache
        # LogLevel debug

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf
</VirtualHost>
