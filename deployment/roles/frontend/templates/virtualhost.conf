<VirtualHost *:{{ http_port }}>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        ServerName {{ proxy_domain }}

        DocumentRoot /var/www/html

        <Directory "/">
          Require all denied
        </Directory>

        ProxyPreserveHost on
        ProxyRequests off
        ProxyPass {{ proxypass_context }} {{ proxypass_target }}
        ProxyPassReverse {{ proxypass_context }} {{ proxypass_target }}

        RewriteEngine On

        ##############################
        # BEGIN MapProxy configuration
        ##############################
        WSGIScriptAlias /mapproxy /home/allu/mapproxy/python/config.py
        WSGIDaemonProcess mapproxy user=allu group=allu processes=8 threads=25
        WSGIProcessGroup mapproxy
        WSGIApplicationGroup %{GLOBAL}

        <Directory /home/allu/mapproxy/python>
          Require all granted
        </Directory>

        RewriteRule ^/wms(.*)$  /mapproxy/service$1  [PT]
        ##############################
        # END MapProxy configuration
        ##############################

        # Support for accessing Angular2 application's paths directly
        # (i.e. redirect all queries like /login to /index.html and let Angular2 handle the path)
        RewriteCond %{REQUEST_FILENAME} !-f
        # Commented to allow /home url navigation
        # RewriteCond %{REQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_URI} !.*\.(css|js|html|png|jpg|jpeg|gif|txt)
        RewriteCond %{REQUEST_URI} !.*/api
        RewriteRule (.*) /index.html [L]

        # Try to force no caching for certain resources
        <filesMatch "\.(html|css)$">
          FileETag None
          Header unset ETag
          Header set Cache-Control "max-age=0, no-cache, no-store, must-revalidate"
          Header set Pragma "no-cache"
          Header set Expires "Wed, 11 Jan 1984 05:00:00 GMT"
        </filesMatch>

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        # LogLevel info ssl:warn

        # Enable debugging by uncommenting line below whenever you need to find out what's going on in Apache
        # LogLevel debug

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf
</VirtualHost>
