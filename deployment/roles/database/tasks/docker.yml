
- name: Build database Docker image. Uses random numbers to force Docker to build certain parts of image every time
  local_action:
    module: docker_image
    path: "{{ role_path }}/files/database_docker"
    name: allu_database
    force: true
    buildargs:
      CACHEBUST: "{{ 9999999 |random }}"

- name: remove existing docker image to avoid Ansible task caching
  local_action: file path=/tmp/allu_database.tar state=absent

# This task requires docker-py to be installed on the local host. Also the user who's executing Ansible has to belong to docker group to be
# able to use docker without super user rights
- name: save local Docker image as file on local host
  local_action: docker_image
                name=allu_database
                archive_path=/tmp/allu_database.tar
                state=present

- name: gzip Docker image on local host
  local_action: archive
                path=/tmp/allu_database.tar
                remove=true

- name: copy Docker image to target host
  copy: src=/tmp/allu_database.tar.gz dest=/tmp
            owner=allu
            group=allu
            mode="u=rwx,g=rx,o=rx"

- name: extract tar from Docker gzipped image
  command: gunzip -f /tmp/allu_database.tar.gz

- name: stop and remove existing container from Docker
  docker_container:
    name: allu_database_container
    state: absent
  become: yes

- name: remove existing container from Docker
  docker_image:
    name=allu_database
    state=absent
    force=true
  become: yes

- name: add container to Docker
  docker_image:
    name=allu_database
    state=present
    load_path=/tmp/allu_database.tar
  become: yes

- name: start container
  docker_container:
    name: allu_database_container
    image: allu_database
    restart_policy: always
    volumes:
      - /home/allu/database/data:/var/lib/postgresql/data:rw
    published_ports:
      - "5432:5432"
  become: yes

- name: remove Docker image tar file
  file: path=/tmp/allu_database.tar state=absent

- name: wait for Postgresql to initialize
  command: psql --host localhost -l -U postgres
  register: result
  until: result.rc != 2
  retries: 30
  delay: 1
