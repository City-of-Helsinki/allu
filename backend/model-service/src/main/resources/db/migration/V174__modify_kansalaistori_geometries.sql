-- DO NOT EDIT THIS FILE MANUALLY!

-- This file was autogenerated. The command used was:
-- java -Dloader.main=fi.hel.allu.model.deployment.LocationGeometryReader -classpath target/model-service-1.0-SNAPSHOT.jar org.springframework.boot.loader.PropertiesLauncher /home/patrik/allu/kansalaistori_2020.geojson /home/patrik/allu/kansalaistori_2020.sql

-- See the documentation for more info.

CREATE FUNCTION check_allu_name(areaname TEXT, sectionname TEXT)
RETURNS VOID AS $$
DECLARE
   match_count INT;
BEGIN
   IF sectionname IS NULL OR sectionname = '' THEN
       SELECT COUNT(*) INTO STRICT match_count FROM
           (SELECT DISTINCT a.name as areaname, fl.section as section FROM
            allu.fixed_location as fl inner join allu.location_area as a on fl.area_id=a.id) as l WHERE
           l.areaname LIKE check_allu_name.areaname AND l.section IS NULL;
   ELSE
       SELECT COUNT(*) INTO STRICT match_count FROM
           (SELECT DISTINCT a.name as areaname, fl.section as section FROM
            allu.fixed_location as fl inner join allu.location_area as a on fl.area_id=a.id) as l WHERE
           l.areaname LIKE check_allu_name.areaname AND l.section = sectionname;
   END IF;
   IF match_count <> 1 THEN
       RAISE EXCEPTION 'Name % matches % areas in database', check_allu_name.areaname, match_count;
   END IF;
END;
$$ LANGUAGE plpgsql;
-- input file: /home/patrik/allu/kansalaistori_2020.geojson
select check_allu_name('Kansalaistori%',null);
update allu.fixed_location
set geometry = 'SRID=3879;GEOMETRYCOLLECTION(MULTIPOLYGON(((25496511.253948964 6673344.514233945,25496509.407056022 6673350.709507751,25496480.45291784 6673342.281597526,25496461.93723159 6673405.262984853,25496519.857197113 6673422.492859564,25496541.31856073 6673348.476871342,25496511.253948964 6673344.514233945))))'
where fixed_location.area_id = (select location_area.id
from allu.location_area location_area
where location_area.name like 'Kansalaistori%') and fixed_location.section is null;
DROP FUNCTION check_allu_name(TEXT, TEXT);
