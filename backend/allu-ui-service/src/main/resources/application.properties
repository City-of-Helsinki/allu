server.port=9000
#debug=true
#jwt.secret = ${random.value}
# list of (url) paths allowed to unauthenticated users
anonymous.access.paths=/oauth2/,/uiconfig,/auth/login
jwt.secret = "Allun salainen avain"
jwt.expiration.hours=12
# the secret used to sign JWT of external-service
jwt.secret.external.service=Julkisenallunsalainenavain

logging.level.org.springframework.web: DEBUG
logging.level.org.springframework.security: DEBUG

#Enables ISO 8601 formatting
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS = false

# set maximum file size for file uploads (note that these are not the properties documented in Spring Boot docs)
multipart.max-file-size=10MB
# set the maximum request size for multipart forms
multipart.max-request-size=10MB

# Is this production deployment
production=false

# Helsinki WFS service geocoding template URL
wfs.template.street.geocode=http://kartta.hel.fi/ws/geoserver/helsinki/wfs?SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=helsinki:Helsinki_osoiteluettelo&cql_filter=(katunimi='{REPLACE_STREET_NAME}' AND osoitenumero='{REPLACE_STREET_NUMBER}')
wfs.template.street.search=http://kartta.hel.fi/ws/geoserver/helsinki/wfs?SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=helsinki:Helsinki_osoiteluettelo&cql_filter=(katunimi ilike '{REPLACE_STREET_NAME}%')
# Add these to your Maven settings.xml! In normal deployment Ansible adds these to the configuration
wfs.username=@geoserverUsername@
wfs.password=@geoserverPassword@

# Tieto authorization endpoint
oauth2.url.authorization=https://fs.hel.fi/adfs/oauth2/authorize?response_type=code
# Tieto ADFS Oauth2 URL for code to token exchange
oauth2.url.token=https://fs.hel.fi/adfs/oauth2/token
# Add this to your Maven settings.xml! In normal deployment Ansible adds these to the configuration
oauth2.clientid=@clientId@
oauth2.redirect.uri=http://185.26.49.172/oauth2/
# the certificate is available from federation metadata: https://fs.hel.fi/federationmetadata/2007-06/federationmetadata.xml
oauth2.x509.certificate=MIIDMDCCAhigAwIBAgIBATANBgkqhkiG9w0BAQsFADAjMSEwHwYDVQQDExhBREZTIFNpZ25pbmcgLSBmcy5oZWwuZmkwHhcNMTYwNDAzMjIxMTAwWhcNMjEwNDAzMjIxMTAwWjAjMSEwHwYDVQQDExhBREZTIFNpZ25pbmcgLSBmcy5oZWwuZmkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCrCo9kuzljk4F8R12AeIYMARztxkMojcrN1KN3KQeoxcCPaFOTMYHWk8ww1N+m0PJoLl1Eray+cMsoHrdd3iVxmApcQBxD02SnGsEn/3D/sTHcoi9WzqwM8ESbtm0jGIvfWrpJtMO/g7ELW0dXBcWq4LRvBtyTt3jiehIO0HohS8xfQ4+vURFpjvfD0kjPemsMJ7QB8Eo+JscSMTF2CNFO9vct1IJiQJUfRbVWk8I/JFA65ZuXrCjY//LSNLzLRZ+Iw1BliSj4jbmOtG8mcb7Fql7dvvz91AMksguO4+9xATukZK7MBLb3DtT2FzYt9oUBRwSsMXiNXh8AitTLUMgpAgMBAAGjbzBtMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFBDL4FpHu+kQEI7MIpSjSACaA9ajMAsGA1UdDwQEAwIFIDARBglghkgBhvhCAQEEBAMCBkAwHgYJYIZIAYb4QgENBBEWD3hjYSBjZXJ0aWZpY2F0ZTANBgkqhkiG9w0BAQsFAAOCAQEAISn44oOdtfdMHh0Z4nezAuDHtKqTd6iV3MY7MwTFmiUFQhJADO2ezpoW3Xj64wWeg3eVXyC7iHk/SV5OVmmo4uU/1YJHiBc5jEUZ5EdvaZQaDH5iaJlK6aiCTznqwu7XJS7LbLeLrVqj3H3IYsV6BiGlT4Z1rXYX+nDfi46TJCKqxE0zTArQQROocfKS+7JM+JU5dLMNOOC+6tCUOP3GEjuE3PMetpbH+k6Wu6d3LzhpU2QICWJnFpj1yJTAb94pWRUKNoBhpxQlWvNzRgFgJesIfkZ4CqqhmHqnV/BO+7MMv/g+WXRD09fo/YIXozpWzmO9LBzEvFe7Itz6C1R4Ng==

#model service
model.service.host=localhost
model.service.port=9010

#search service
search.service.host=localhost
search.service.port=9020

#pdf service
pdf.service.host=localhost
pdf.service.port=9030

# if set, only matching destination addressess are accepted:
email.allowed.addresses=*@vincit.fi,*@hel.fi

# sender address for generated emails:
email.sender.address=Allu Aluevaraus <noreply@allu.alluallu.invalid>

# Configure mail server
spring.mail.host=localhost
spring.mail.port=25
spring.mail.username=
spring.mail.password=
