@import '~@angular/material/theming';

// Base input styling
input[type="text"] {
  display: block;
  margin: 0;
  width: 100%;
  appearance: none;
  box-shadow: none;
}
input[type="text"]:focus {
  outline: none;
}

input.mat-input-element.year-input {
  width: 75px;
  text-align: center;
}

.input-with-addon.input,
.input-with-addon.button {
  border: none;
}

.input-with-addon {
  display: flex;
  margin-bottom: 1.5em;
  background: mat-contrast($allu-primary, 500);
  border-radius: 6px 6px;

  .addon-btn {
    background: mat-color($allu-accent, 500) linear-gradient(to bottom, mat-color($allu-accent, A100), mat-color($allu-accent, A700));

    .material-icons {
      color: mat-contrast($allu-accent, 800);
    }
  }
}

.input-with-addon.input-raised {
  box-shadow: 0 2px 4px 0 #757575;
}

.input-addon-item {
  padding: .5em .75em;
  border: 1px solid #dcdcdc;

  &:not(:first-child) {
    border-left: 0;
  }

  &:not(:last-child):not(.last-item) {
    border-right: 0;
  }

  &:first-child {
    border-radius: 6px 0 0 6px;
  }

  &:last-child,
  &.last-item {
    border-radius: 0 6px 6px 0;
  }
}

.input-addon-field {
  @extend .input-addon-item;
  flex: 1;

  &:focus {
    border: 1px solid mat-color($allu-primary, 200);
  }
}

.mat-select > .mat-select-trigger {
  font-size: inherit;
  margin-bottom: 17px;
  padding-top: 6px;
  height: 2.5rem !important; // important to override materials !important
}

.mat-select-value-text {
  padding-top: 6px;
}

.mat-select-placeholder.mat-floating-placeholder {
  top: -0.9em !important;
  transform: translate3d(0,0,0) scale(.75);
}

.checkbox-matching-height .mat-checkbox-layout .mat-checkbox-label {
  line-height: 42px;
}


@mixin placeholder-theme($theme) {
  $primary: map-get($theme, primary);

  ::-webkit-input-placeholder {
    color: mat-color($primary, 300);
  }

  :-moz-placeholder { /* Firefox 18- */
    color: mat-color($primary, 300);
  }

  ::-moz-placeholder {  /* Firefox 19+ */
    color: mat-color($primary, 300);
  }

  :-ms-input-placeholder {
    color: mat-color($primary, 300);
  }

  .mat-input-placeholder,
  .mat-select-placeholder {
    color: mat-color($primary, 300);
  }

  input[disabled] + .mat-input-placeholder-wrapper .mat-input-placeholder,
  .mat-select-disabled .mat-select-placeholder {
    color: mat-color($primary, 200);
  }
}

@mixin checkbox-theme($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);

  .mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background {
    background-color: mat-color($accent, 200);
  }

  .mat-checkbox-checked .mat-checkbox-frame {
    border-color: mat-color($accent, 200);
  }

  .mat-checkbox-label {
    color: $black-87-opacity;
  }

  .mat-checkbox-disabled .mat-checkbox-label {
    color: $black-38-opacity;
  }
}

.mat-autocomplete-panel {
  .mat-option:hover:not(.mat-option-disabled),
  .mat-option.mat-active:not(.mat-option-disabled),
  .mat-option:focus:not(.mat-option-disabled) {
    background-color: mat-color($allu-primary, 200);
  }
}

td.mat-calendar-body-cell:hover {
  cursor: pointer;
}

.form-group .has-warning.ng-dirty:not(.ng-invalid) label.mat-input-placeholder,
.form-group .has-warning.ng-touched:not(.ng-invalid) label.mat-input-placeholder {
  color: mat-color($allu-accent, 700);
}

.form-group .has-warning:not(.ng-invalid) .mat-input-underline {
  border-color: mat-color($allu-accent, 700);
}

.form-group .has-warning:not(.ng-invalid) .mat-input-ripple {
  background-color: mat-color($allu-accent, 700);
}